<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>

    <!-- Customer Information -->
    <h2>Customer Information</h2>

    <!-- <label for="customerName">Customer Name:</label>
    <input type="text" id="customerName" readonly> 

    <label for="billingAddress">Billing Address:</label>
    <input type="text" id="billingAddress" readonly>-->

    <p>User Name:</p>
    <p><%= user ? user.username : 'No logged in customer available' %></p>

    <p>User Role:</p>
    <p><%= user ? user.role : 'No logged in customer available' %></p>

    <!-- TODO:  // Check if quantity exceeds -->

    <!-- Order Details -->
    
    <h2>Order Details</h2>
    <form action="/checkout" method="POST">
    <!-- <form id="addItemForm"> -->
        <label for="carpetItem1">Choose Kit Item(s):</label><br>
        <select id="item1" name="carpetkititem1" required>
            <% combinedItems.forEach(item => { %>
                    <option value="<%= item._id %>" data-name="<%= item.name %>" 
                        data-price="<%= item.price %>" data-category = "<%= item.category %>" >
                        Carpet/Kit Name: <%= item.name %> <br> (Quantity: <%= item.quantity %> || Price: <%= item.price %>)</option>
            <% }) %>
        </select>


        <label for="quantity">Quantity:</label>
        <input type="number" id="quantity" min="1" required>

        <button type="button" id="addItemButton">Add Item</button>
    <!-- </form> -->

    

    <!-- Display user-selected items and total cost -->
    <h2>Your Selection:</h2>
    <ul id="itemList" name="itemList"></ul>
    <h2>Total Cost:</h2>
    <input type="hidden" id="totalCost" name="totalCost" value="0.00">
    <p id="totalCostDisplay">0.00</p>
    <!-- <label for="totalCost"  id="totalCost" name="totalCost">
    <p>0.00</p> -->
    </label>
    <!-- Use Hidden tag for storing the sold name/category arrays, to be used in backend (req.body.itemList_name)-->
    <input type="hidden" id="itemList_name" name="itemList_name" value="">
    <input type="hidden" id="itemList_category" name="itemList_category" value="">


    <br><br>
    <label for="preferredPaymentMethod">Preferred Payment Method:</label><br>
    <input type="text" id="preferredPaymentMethod" name="preferredPaymentMethod" placeholder="MasterCard">

    <br><br>
    <label for="deliveryInstructions">Delivery Instructions:</label><br>
    <!-- Use name = ... tag , to be used in backend (req.body....)-->
    <textarea id="deliveryInstructions" placeholder="From Iran to Melbourne" name = "deliveryInstructions"></textarea>

    <br><br>
    <label for="purchaseOrderDate">Purchase Order Date:</label><br>
    <p  name = "purchaseOrderDate"><%= currentDate %></p>

    <br>
    <label for="orderNumber">Order Number:</label><br>
    <input type="text" id="orderNumber" name = "orderNumber" readonly>

    <!-- <br><br>
    <label for="orderTotal">Order Total:</label><br>
    <input type="text" id="orderTotal" readonly> -->

    <br><br>
    <label for="discounts">Discounts or Code:</label><br>
    <input type="text" id="discounts" name = "discounts">

    <br><br>
    <label for="salesRepresentative">Sales Representative:</label><br>
    <input type="text" id="salesRepresentative" name="salesRepresentative">

    <br><br>
    <label for="orderStatus">Order Status:</label><br>
    <select id="orderStatus" name = "orderStatus">
        <option value="pending">Pending</option>
        <option value="confirmed">Confirmed</option>
        <option value="shipped">Shipped</option>
        <option value="delivered">Delivered</option>
    </select><br>

    <br><br>
    <label for="customerNotes">Customer Notes:</label><br>
    <textarea id="customerNotes" name = "customerNotes"></textarea>

    <br><br>
    




    <!-- Submit Button -->
    <button id="submitOrder" type="submit">Submit Order</button>
    <br><br>
        <button type="button" onclick="window.location.href = '/'">Log Out</button>
</form>

</body>
</html>

<!-- JavaScript to handle item addition and total cost calculation -->
<script>
    //const addItemForm = document.getElementById('addItemForm');
    const itemList = document.getElementById('itemList');
    const totalCost = document.getElementById('totalCost');
    // const items_record = document.getElementById('itemList_name');
    const items = [];

    //addItemForm.addEventListener('submit', (e) => {
    //    e.preventDefault();
    //});

    const addItemButton = document.getElementById('addItemButton');
    addItemButton.addEventListener('click', () => {
        const itemSelect = document.getElementById('item1');
        const selectedOption = itemSelect.options[itemSelect.selectedIndex];
        const quantity = parseInt(document.getElementById('quantity').value, 10);
        // const item1 = document.getElementById('item1').value;

        // Validate quantity
        if (isNaN(quantity) || quantity <= 0) {
            alert('Please enter a valid quantity.');
            return;
        }

        const itemName = selectedOption.getAttribute('data-name');
        const itemPrice = parseFloat(selectedOption.getAttribute('data-price'));
        const itemCategory = parseFloat(selectedOption.getAttribute('data-category'));
        const cost = itemPrice * quantity;
        const item = {
            name: itemName,
            quantity,
            price: itemPrice,
            category: itemCategory,
            totalCost: cost.toFixed(2) // Format total cost to two decimal places
        };
        items.push(item);

        // Update the displayed list and total cost
        updateItemList();
        updateTotalCost();
        updateRecordName();
    });

    function updateItemList() {
        itemList.innerHTML = '';
        items.forEach((item, index) => {
            const listItem = document.createElement('li');
            // listItem.textContent = `Item: ${item.item1.name}, Quantity: ${item.quantity}, Price: $${item.item1.price}`;
            listItem.textContent = `Item: ${item.name}, Quantity: ${item.quantity}, Price: $${item.price.toFixed(2)}, Total Cost: $${item.totalCost}`;
            itemList.appendChild(listItem);
        });
        
    }

    function updateRecordName(){
        // Get the current sold item's name and category
        // Store them in seperate arrays

        const itemNames_1 = items.map(item => item.name);
        const itemListNameInput = document.getElementById('itemList_name');
        itemListNameInput.value = itemNames_1;

        const itemNames_2 = items.map(item => item.category);
        const itemListNameInput_2 = document.getElementById('itemList_category');
        itemListNameInput_2.value = itemNames_2;


    }

    function updateTotalCost() {
        
        const costArray = items.map(item => parseFloat(item.totalCost));
        const total = costArray.reduce((acc, current) => acc + current, 0);
        //totalCost.textContent = `$${total.toFixed(2)}`;


        // Update the hidden input field's value
        totalCost.value = total.toFixed(2);

        // Update the displayed total cost
        const totalCostDisplay = document.getElementById('totalCostDisplay');
        totalCostDisplay.textContent = `$${total.toFixed(2)}`;
        
    }
</script>